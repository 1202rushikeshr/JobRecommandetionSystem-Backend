spring.application.name=JobRecommendationSystem
logging.level.org.springframework.boot.autoconfigure=ERROR

spring.kafka.bootstrap-servers=
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=request:com.ai.JobRecommendationSystem.dto.RegistrationRequestDto
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.topic=jrs-info
spring.kafka.query-topic=sql-info
spring.kafka.consumer.group-id=jrs_consumer_group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.ai.JobRecommendationSystem.dto.RegistrationRequestDto
spring.kafka.jdbcconnectorclass=io.confluent.connect.jdbc.JdbcSinkConnector
poll.interval.ms: 5000


# PostgreSQL DB connection
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
spring.kafka.kafkaconnectorurl=


# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection pool (optional but recommended for production)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000
