pipeline {
    agent any
       environment {
               AWS_ACCOUNT_ID = '597088054150'
               AWS_DEFAULT_REGION = 'us-east-1'   // change as needed
               IMAGE_REPO_NAME = 'jobrecommendationsystem'
               IMAGE_TAG = "v1"
               REPOSITORY_URI= '597088054150.dkr.ecr.us-east-1.amazonaws.com/jobrecommendationsystem'
           }

    stages {

            stages {
                    stage('AWS ECR Login') {
                        steps {
                              script {
//                                     def accountId = sh(script: "aws sts get-caller-identity --query Account --output text", returnStdout: true).trim()
                                    ECR_REGISTRY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"

                                    sh """
                                        echo "Logging into ECR at ${ECR_REGISTRY}..."
                                        aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | \
                                          docker login --username AWS --password-stdin ${ECR_REGISTRY}
                                    """
                                }
                            }
                        }
                    }
                   stage('Cloning Git') {
                        steps {
                            checkout([$class:'GitSCM',branches: [[name:'/*main']], doGenerateSubmoduleConfigurations:false,
                            extensions:[],submoduleCfg:[],userRemoteConfig:[[credentialsId:'',
                            url:'https://github.com/1202rushikeshr/JobRecommandetionSystem-Backend']]])
            //                     git url: 'https://github.com/1202rushikeshr/JobRecommandetionSystem-Backend', branches: [[name:'/*main']]
                            }
                        }

                   stage('Build Gradle Project') {
                        steps {
                                sh './gradlew clean build'
                            }
                        }

                   stage('Build Docker Image') {
                         steps {
                                script {
                                            dockerImage = docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}")
                                        }
                                    }
                                }

            stage('Tag and Push Docker Image to ECR') {
                                steps {
                                    script {
                                        sh """docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"""
                                        sh """docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"""
                                    }
                                }
                            }
                    }
            }